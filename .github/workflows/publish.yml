name: Release

on:
  pull_request:
  push:
    tags:
      - '*'

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: ((github.event_name == 'push' && startsWith(github.ref, 'refs/tags')) || contains(github.event.pull_request.labels.*.name, 'Build wheels'))
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
    - name: Install dependencies
      run: |
        python -m pip install pip "twine>=3.3" -U
        python -m pip install "cibuildwheel==2.3.1"
    # TODO: Enable py310-* when scipy allows
    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BUILD: 'cp37-* cp38-* cp39-*'
        CIBW_SKIP: '*-musllinux_* *-manylinux_i686'
        CIBW_BEFORE_BUILD_LINUX: yum install -y geos-devel freetype-devel libpng-devel
        CIBW_TEST_REQUIRES: pytest-astropy
        CIBW_TEST_COMMAND: "pytest -p no:warnings --pyargs reproject"
    - name: Check wheels
      run: python -m twine check --strict wheelhouse/*
    # Upload artifacts because gh-action-pypi-publish Docker is only on Linux
    - name: Upload wheels
      if: startsWith(github.ref, 'refs/tags')
      uses: actions/upload-artifact@v2
      with:
        name: additional-pylons
        path: ./wheelhouse/*.whl

  build_dist:
    runs-on: ubuntu-latest
    needs: build_wheels
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install libgeos-dev libfreetype6-dev libpng-dev
        python -m pip install pip build "twine>=3.3" -U
    - name: Build package
      run: python -m build --sdist .
    - name: Check dist
      run: python -m twine check --strict dist/*
    - name: Test package
      run: |
        cd ..
        python -m venv testenv
        testenv/bin/pip install pytest-astropy reproject/dist/*.tar.gz
        testenv/bin/pytest -p no:warnings --pyargs reproject
    - name: Download wheels
      if: startsWith(github.ref, 'refs/tags')
      uses: actions/download-artifact@v2
      with:
        name: additional-pylons
        path: dist
    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
