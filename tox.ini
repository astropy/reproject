[tox]
envlist =
    py{37,38,39,310,311}-{test}{-oldestdeps,-numpy121}
    build_docs
    codestyle
isolated_build = True

[testenv]
whitelist_externals =
    geos-config
passenv =
    SSL_CERT_FILE
setenv =
    HOME = {envtmpdir}
    MPLBACKEND = Agg
    PYTEST_COMMAND = pytest --arraydiff --arraydiff-default-format=fits --pyargs reproject --cov reproject --cov-config={toxinidir}/setup.cfg {toxinidir}/docs
changedir =
    .tmp/{envname}
deps =
    numpy121: numpy==1.21.*

    oldestdeps: numpy==1.17.3
    oldestdeps: astropy==4.0.*
    oldestdeps: astropy-healpix==0.6
    oldestdeps: scipy==1.3.2

    devdeps: numpy>=0.0.dev0
    devdeps: scipy>=0.0.dev0
    devdeps: astropy>=0.0.dev0
    devdeps: git+https://github.com/asdf-format/asdf.git#egg=asdf
    devdeps: git+https://github.com/astropy/asdf-astropy.git
    devdeps: git+https://github.com/spacetelescope/gwcs.git#egg=gwcs
    devdeps: git+https://github.com/sunpy/sunpy.git#egg=sunpy
extras =
    test
    # Don't run the more complex tests on oldestdeps because it pulls in a nest
    # web of dependencies much newer than our mins
    !oldestdeps: testall
commands =
    pip freeze
    !oldestdeps: {env:PYTEST_COMMAND} {posargs}
    oldestdeps: {env:PYTEST_COMMAND} -W ignore::RuntimeWarning {posargs}
    # Clear the download cache from the .tox directory - this is done to
    # avoid issues in the continuous integration when uploading results
    python -c 'from astropy.utils.data import clear_download_cache; clear_download_cache()'

[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b html . _build/html

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b linkcheck . _build/html

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style with flake8
deps = flake8
commands = flake8 reproject --count
